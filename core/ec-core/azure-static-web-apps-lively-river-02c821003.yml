name: Azure Static Web Apps CI/CD
pr:
  branches:
    include:
      - develop
trigger:
  branches:
    include:
      - develop

variables:        
  pnpm_config_cache: $(Pipeline.Workspace)/.pnpm-store
  app_location: '' # Adjust this path to your app's location
  output_location: 'core/.next' # Adjust this path to your build output location


jobs:
- job: build_and_deploy_job
  displayName: Build and Deploy Job
  condition: or(eq(variables['Build.Reason'], 'Manual'),or(eq(variables['Build.Reason'], 'PullRequest'),eq(variables['Build.Reason'], 'IndividualCI')))
  pool:
    vmImage: ubuntu-latest
  variables:        
  - group: Azure-Static-Web-Apps-lively-river-02c821003-variable-group    
  

  steps:  
  - checkout: self
    displayName: 'Checkout source code with submodules'  
    submodules: true



  - task: NodeTool@0
    inputs:
      versionSource: 'spec'
      versionSpec: '20'
    displayName: Node 20+

  - task: Cache@2    
    inputs:
      key: 'pnpm | "$(Agent.OS)" | pnpm-lock.yaml'
      restoreKeys: 'pnpm | "$(Agent.OS)"'
      path: $(pnpm_config_cache)
    
    
    # Set up pnpm
  - script: |
      corepack enable
      corepack prepare pnpm@latest --activate
      pnpm config set store-dir $(pnpm_config_cache)
    displayName: "Set up pnpm"

  - script: |
      pnpm install
    displayName: "Install dependencies using pnpm"

  - script: |
      pnpm run $(build_command)
    displayName: "Build project using pnpm"
    workingDirectory: $(app_location)

  - script: |
      echo "Listing contents of the working directory:"
      ls -la
      echo "Listing contents of the app directory:"
      ls -la $(app_location)    
      echo "Listing contents of the dioutput directory:"
      ls -la $(output_location)
    displayName: "List directory contents after build"    

  - task: AzureStaticWebApp@0
    inputs:
      azure_static_web_apps_api_token: $(AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_RIVER_02C821003)   
      verbose: true
      app_location: $(app_location)
      output_location: $(output_location)     
      skip_app_build: true
      skip_api_build: true      
    displayName: "Deploy to Azure"
    continueOnError: true
  
  - script: |
      if [ -f /root/.npm/_logs/*.log ]; then
        cat /root/.npm/_logs/*.log
      fi
    displayName: "Output npm logs"
    continueOnError: true

